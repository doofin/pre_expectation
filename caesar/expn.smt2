(declare-datatypes ((EUReal 0)) (((Rplus_inf) (Rplus_real (rplus_real Real)))))
(declare-fun exprp (EUReal EUReal) EUReal)
(declare-fun n!13 () Int)
(declare-fun e!14 () Int)
(define-funs-rec ( ( rplus_add ((x!1 EUReal) (x!2 EUReal)) EUReal)
                   ( rplus_le ((x!1 EUReal) (x!2 EUReal)) Bool)
                   ( rplus_sub ((x!1 EUReal) (x!2 EUReal)) EUReal)
                   ( rplus_mul ((x!1 EUReal) (x!2 EUReal)) EUReal))
                 ( (ite (or ((_ is (Rplus_inf () EUReal)) x!1)
                            ((_ is (Rplus_inf () EUReal)) x!2))
                        Rplus_inf
                        (Rplus_real (+ (rplus_real x!1) (rplus_real x!2))))
                   (or ((_ is (Rplus_inf () EUReal)) x!2)
                       (and ((_ is (Rplus_real (Real) EUReal)) x!1)
                            (<= (rplus_real x!1) (rplus_real x!2))))
                   (let ((a!1 (Rplus_real (ite (>= (rplus_real x!1)
                                                   (rplus_real x!2))
                                               (- (rplus_real x!1)
                                                  (rplus_real x!2))
                                               0.0))))
                     (ite ((_ is (Rplus_inf () EUReal)) x!2)
                          (Rplus_real 0.0)
                          (ite ((_ is (Rplus_inf () EUReal)) x!1) Rplus_inf a!1)))
                   (let ((a!1 (or (and ((_ is (Rplus_inf () EUReal)) x!1)
                                       (= x!2 (Rplus_real 0.0)))
                                  (and ((_ is (Rplus_inf () EUReal)) x!2)
                                       (= x!1 (Rplus_real 0.0))))))
                     (ite (and ((_ is (Rplus_real (Real) EUReal)) x!1)
                               ((_ is (Rplus_real (Real) EUReal)) x!2))
                          (Rplus_real (* (rplus_real x!1) (rplus_real x!2)))
                          (ite a!1 (Rplus_real 0.0) Rplus_inf)))))
(assert (forall ((x!8 Bool) (x!9 Real))
  (! (let ((a!1 (not (and (>= x!9 0.0) (or (not x!8) (= x!9 1.0)))))
           (a!2 ((_ is (Rplus_inf () EUReal))
                  (exprp (ite x!8 Rplus_inf (Rplus_real x!9)) (Rplus_real 0.0))))
           (a!3 (rplus_real (exprp (ite x!8 Rplus_inf (Rplus_real x!9))
                                   (Rplus_real 0.0)))))
       (or a!1 (and (not a!2) (or a!2 (= a!3 1.0)))))
     :weight 0)))
(assert (forall ((x!10 Bool) (x!11 Real) (exponent!12 Int))
  (! (let ((a!1 (not (and (>= x!11 0.0)
                          (or (not x!10) (= x!11 1.0))
                          (>= exponent!12 0))))
           (a!2 (exprp (ite x!10 Rplus_inf (Rplus_real x!11))
                       (Rplus_real (+ 1.0 (to_real exponent!12)))))
           (a!3 (Rplus_real (to_real (ite (>= exponent!12 1)
                                          (+ (- 1) exponent!12)
                                          0)))))
     (let ((a!4 ((_ is (Rplus_inf () EUReal))
                  (exprp (ite x!10 Rplus_inf (Rplus_real x!11)) a!3)))
           (a!5 (rplus_real (exprp (ite x!10 Rplus_inf (Rplus_real x!11)) a!3))))
     (let ((a!6 (or a!4 (not (and (not a!4) (= a!5 0.0)))))
           (a!7 (and a!4 (or x!10 (not (= x!11 0.0))))))
     (let ((a!8 (or (not ((_ is (Rplus_inf () EUReal)) a!2))
                    (not (or (and x!10 a!6) a!7)))))
     (let ((a!9 (or (not a!8)
                    (= (ite ((_ is (Rplus_inf () EUReal)) a!2)
                            1.0
                            (rplus_real a!2))
                       (* (ite a!4 1.0 a!5) x!11)))))
     (let ((a!10 (and (= ((_ is (Rplus_inf () EUReal)) a!2)
                         (or (and x!10 a!6) a!7))
                      a!9)))
       (or a!1 a!10)))))))
     :weight 0)))
(assert (>= n!13 0))
(assert (>= e!14 0))
(assert (let ((a!1 ((_ is (Rplus_inf () EUReal))
             (exprp (Rplus_real (to_real n!13)) (Rplus_real (to_real e!14))))))
  (not a!1)))
(assert (let ((a!1 (rplus_real (exprp (Rplus_real (to_real n!13))
                              (Rplus_real (to_real e!14))))))
  (<= a!1 0.0)))
(assert (not (<= n!13 0)))
(assert (not (<= e!14 0)))
